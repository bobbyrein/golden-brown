{"ast":null,"code":"var Commit = require('./commit').Commit;\nvar Remote = exports.Remote = function (name, commit) {\n  var _name = name;\n  var _commit = commit;\n  // Define the properties\n  Object.defineProperty(this, \"name\", {\n    get: function () {\n      return _name;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"commit\", {\n    get: function () {\n      return _commit;\n    },\n    enumerable: true\n  });\n};\nvar prefix = function (name) {\n  return \"refs/\" + name + \"s\";\n};\nRemote.find_all = function (repo, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  options = args.length ? args.shift() : {};\n\n  // Let's fetch the references\n  repo.git.refs({}, prefix('remote'), function (err, refs) {\n    if (err) return callback(err, refs);\n    // Map the references\n    var mapped_refs = refs.split(/\\n/).map(function (ref) {\n      // Fetch the name and id for the reference\n      var split_reference = ref.split(/ /);\n      var name = split_reference[0];\n      var id = split_reference[1];\n\n      // Create a commit object wit the id\n      var commit = new Commit(repo, id);\n      // Wrap the commit object in a head object and return mapped object\n      return new Remote(name, commit);\n    });\n    callback(null, mapped_refs);\n  });\n};","map":{"version":3,"names":["Commit","require","Remote","exports","name","commit","_name","_commit","Object","defineProperty","get","enumerable","prefix","find_all","repo","options","callback","args","Array","prototype","slice","call","arguments","pop","length","shift","git","refs","err","mapped_refs","split","map","ref","split_reference","id"],"sources":["/Users/bobbyrein/react-course/golden-brown/node_modules/git/lib/git/remote.js"],"sourcesContent":["var Commit = require('./commit').Commit;\n\nvar Remote = exports.Remote = function(name, commit) {\n  var _name = name;\n  var _commit = commit;  \n  // Define the properties\n  Object.defineProperty(this, \"name\", { get: function() { return _name; }, enumerable: true});\n  Object.defineProperty(this, \"commit\", { get: function() { return _commit; }, enumerable: true});\n}\n\nvar prefix = function(name) { \n    return \"refs/\" + name + \"s\"; \n  }\n\nRemote.find_all = function(repo, options, callback) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  callback = args.pop();\n  options = args.length ? args.shift() : {};\n  \n  // Let's fetch the references\n  repo.git.refs({}, prefix('remote'), function(err, refs) {    \n    if(err) return callback(err, refs);\n    // Map the references\n    var mapped_refs = refs.split(/\\n/).map(function(ref) {\n      // Fetch the name and id for the reference\n      var split_reference = ref.split(/ /);\n      var name = split_reference[0];\n      var id = split_reference[1];\n      \n      // Create a commit object wit the id\n      var commit = new Commit(repo, id);\n      // Wrap the commit object in a head object and return mapped object\n      return new Remote(name, commit);\n    })    \n    callback(null, mapped_refs);\n  })  \n}"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC,CAACD,MAAM;AAEvC,IAAIE,MAAM,GAAGC,OAAO,CAACD,MAAM,GAAG,UAASE,IAAI,EAAEC,MAAM,EAAE;EACnD,IAAIC,KAAK,GAAGF,IAAI;EAChB,IAAIG,OAAO,GAAGF,MAAM;EACpB;EACAG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAOJ,KAAK;IAAE,CAAC;IAAEK,UAAU,EAAE;EAAI,CAAC,CAAC;EAC3FH,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAOH,OAAO;IAAE,CAAC;IAAEI,UAAU,EAAE;EAAI,CAAC,CAAC;AACjG,CAAC;AAED,IAAIC,MAAM,GAAG,UAASR,IAAI,EAAE;EACxB,OAAO,OAAO,GAAGA,IAAI,GAAG,GAAG;AAC7B,CAAC;AAEHF,MAAM,CAACW,QAAQ,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EAClD,IAAIC,IAAI,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACC,SAAS,EAAE,CAAC,CAAC;EACnDN,QAAQ,GAAGC,IAAI,CAACM,GAAG,EAAE;EACrBR,OAAO,GAAGE,IAAI,CAACO,MAAM,GAAGP,IAAI,CAACQ,KAAK,EAAE,GAAG,CAAC,CAAC;;EAEzC;EACAX,IAAI,CAACY,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEf,MAAM,CAAC,QAAQ,CAAC,EAAE,UAASgB,GAAG,EAAED,IAAI,EAAE;IACtD,IAAGC,GAAG,EAAE,OAAOZ,QAAQ,CAACY,GAAG,EAAED,IAAI,CAAC;IAClC;IACA,IAAIE,WAAW,GAAGF,IAAI,CAACG,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,UAASC,GAAG,EAAE;MACnD;MACA,IAAIC,eAAe,GAAGD,GAAG,CAACF,KAAK,CAAC,GAAG,CAAC;MACpC,IAAI1B,IAAI,GAAG6B,eAAe,CAAC,CAAC,CAAC;MAC7B,IAAIC,EAAE,GAAGD,eAAe,CAAC,CAAC,CAAC;;MAE3B;MACA,IAAI5B,MAAM,GAAG,IAAIL,MAAM,CAACc,IAAI,EAAEoB,EAAE,CAAC;MACjC;MACA,OAAO,IAAIhC,MAAM,CAACE,IAAI,EAAEC,MAAM,CAAC;IACjC,CAAC,CAAC;IACFW,QAAQ,CAAC,IAAI,EAAEa,WAAW,CAAC;EAC7B,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"script"}