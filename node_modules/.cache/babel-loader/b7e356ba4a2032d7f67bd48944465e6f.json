{"ast":null,"code":"// Represents a simplistic (non-contextual) change. Represents the removal or\n// addition of an element from either the old or the new sequenced enumerable.\nvar Change = exports.Change = function (action, position, element) {\n  this.action = action;\n  this.position = position;\n  this.element = element;\n};\nChange.from_a = function (arr) {\n  return new Change(arr[0], arr[1], arr[2]);\n};\nChange.prototype.to_a = function () {\n  return [this.action, this.position, this.element];\n};\nChange.prototype.is_deleting = function () {\n  return this.action == '-';\n};\nChange.prototype.is_adding = function () {\n  return this.action == '+';\n};\nChange.prototype.is_unchanged = function () {\n  return this.action == '=';\n};\nChange.prototype.is_changed = function () {\n  return this.changed == '!';\n};\nChange.prototype.is_finished_a = function () {\n  return this.changed == '>';\n};\nChange.prototype.is_finished_b = function () {\n  return this.changed == '<';\n};\nvar ContextChange = exports.ContextChange = function (action, old_position, old_element, new_position, new_element) {\n  this.action = action;\n  this.old_position = old_position;\n  this.old_element = old_element;\n  this.new_position = new_position;\n  this.new_element = new_element;\n};\n\n// Creates a ContextChange from an array produced by ContextChange#to_a.\nContextChange.from_a = function (arr) {\n  if (arr.length == 5) {\n    return new ContextChange(arr[0], arr[1], arr[2], arr[3], arr[4]);\n  } else {\n    return new ContextChange(arr[0], arr[1][0], arr[1][1], arr[2][0], arr[2][1]);\n  }\n};\n\n// Simplifies a context change for use in some diff callbacks. '<' actions\n// are converted to '-' and '>' actions are converted to '+'. \nContextChange.simplify = function (event) {\n  var ea = event.to_a();\n  if (ea[0] == '-') {\n    ea[2][1] = null;\n  } else if (ea[0] == '<') {\n    ea[0] = '-';\n    ea[2][1] = null;\n  } else if (ea[0] == '+') {\n    ea[1][1] = null;\n  } else if (ea[0] == '>') {\n    ea[0] = '+';\n    ea[1][1] = null;\n  }\n\n  // Return a Context Change object\n  return ContextChange.from_a(ea);\n};\nContextChange.prototype.to_a = function () {\n  return [this.action, [this.old_position, this.old_element], [this.new_position, this.new_element]];\n};\nContextChange.prototype.is_deleting = function () {\n  return this.action == '-';\n};\nContextChange.prototype.is_adding = function () {\n  return this.action == '+';\n};\nContextChange.prototype.is_unchanged = function () {\n  return this.action == '=';\n};\nContextChange.prototype.is_changed = function () {\n  return this.changed == '!';\n};\nContextChange.prototype.is_finished_a = function () {\n  return this.changed == '>';\n};\nContextChange.prototype.is_finished_b = function () {\n  return this.changed == '<';\n};","map":{"version":3,"names":["Change","exports","action","position","element","from_a","arr","prototype","to_a","is_deleting","is_adding","is_unchanged","is_changed","changed","is_finished_a","is_finished_b","ContextChange","old_position","old_element","new_position","new_element","length","simplify","event","ea"],"sources":["/Users/bobbyrein/react-course/golden-brown/node_modules/git/lib/diff/change.js"],"sourcesContent":["// Represents a simplistic (non-contextual) change. Represents the removal or\n// addition of an element from either the old or the new sequenced enumerable.\nvar Change = exports.Change = function(action, position, element) {\n  this.action = action;\n  this.position = position;\n  this.element = element;  \n}\n\nChange.from_a = function(arr) {\n  return new Change(arr[0], arr[1], arr[2]);\n}\n\nChange.prototype.to_a = function() {\n  return [this.action, this.position, this.element];\n}\n\nChange.prototype.is_deleting = function() {\n  return this.action == '-';\n}\n\nChange.prototype.is_adding = function() {\n  return this.action == '+';\n}\n\nChange.prototype.is_unchanged = function() {\n  return this.action == '=';\n}\n\nChange.prototype.is_changed = function() {\n  return this.changed == '!';\n}\n\nChange.prototype.is_finished_a = function() {\n  return this.changed == '>';\n}\n\nChange.prototype.is_finished_b = function() {\n  return this.changed == '<';\n}\n\nvar ContextChange = exports.ContextChange = function(action, old_position, old_element, new_position, new_element) {\n  this.action = action;\n  this.old_position = old_position;\n  this.old_element = old_element;\n  this.new_position = new_position;\n  this.new_element = new_element;\n}\n\n// Creates a ContextChange from an array produced by ContextChange#to_a.\nContextChange.from_a = function(arr) {\n  if(arr.length == 5) {\n    return new ContextChange(arr[0], arr[1], arr[2], arr[3], arr[4]);\n  } else {\n    return new ContextChange(arr[0], arr[1][0], arr[1][1], arr[2][0], arr[2][1]);\n  }\n}\n\n// Simplifies a context change for use in some diff callbacks. '<' actions\n// are converted to '-' and '>' actions are converted to '+'. \nContextChange.simplify = function(event) {\n  var ea = event.to_a();\n  \n  if(ea[0] == '-') {\n    ea[2][1] = null;\n  } else if(ea[0] == '<') {\n    ea[0] = '-';\n    ea[2][1] = null;\n  } else if(ea[0] == '+') {\n    ea[1][1] = null;\n  } else if(ea[0] == '>') {\n    ea[0] = '+';\n    ea[1][1] = null;\n  }\n  \n  // Return a Context Change object\n  return ContextChange.from_a(ea);\n}\n\nContextChange.prototype.to_a = function() {\n  return [this.action, [this.old_position, this.old_element], [this.new_position, this.new_element]];\n}\n\nContextChange.prototype.is_deleting = function() {\n  return this.action == '-';\n}\n\nContextChange.prototype.is_adding = function() {\n  return this.action == '+';\n}\n\nContextChange.prototype.is_unchanged = function() {\n  return this.action == '=';\n}\n\nContextChange.prototype.is_changed = function() {\n  return this.changed == '!';\n}\n\nContextChange.prototype.is_finished_a = function() {\n  return this.changed == '>';\n}\n\nContextChange.prototype.is_finished_b = function() {\n  return this.changed == '<';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}