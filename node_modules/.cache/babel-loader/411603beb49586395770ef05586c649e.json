{"ast":null,"code":"var util = require('util'),\n  BinaryParser = require('../binary_parser').BinaryParser,\n  DirectoryEntry = require('../internal/directory_entry').DirectoryEntry;\nvar GitTree = exports.GitTree = function (entries, repository) {\n  var _entries = entries ? entries : [],\n    _repository = repository;\n\n  // Internal properties\n  Object.defineProperty(this, \"entries\", {\n    get: function () {\n      return _entries;\n    },\n    set: function (value) {\n      _entries = value;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"repository\", {\n    get: function () {\n      return _repository;\n    },\n    set: function (value) {\n      _repository = value;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"type\", {\n    get: function () {\n      return \"tree\";\n    },\n    enumerable: true\n  });\n\n  // Raw content of commit\n  Object.defineProperty(this, \"raw_content\", {\n    get: function () {\n      return _entries.map(function (e) {\n        return [[e.format_mode, e.format_type, e.sha1].join(' '), e.name].join('\\t');\n      }).join('\\n');\n    },\n    enumerable: true\n  });\n};\nvar read_until_chr = function (index, content, char) {\n  var found = false;\n  var content_length = content.length;\n  var chr_code = char.charCodeAt(0);\n  var offset = 0;\n\n  // Search until we locate the content\n  while (!found && index + offset < content_length) {\n    if (content.charCodeAt(index + offset) == chr_code) found = true;\n    offset = offset + 1;\n  }\n\n  // Extract content and return\n  return content.substr(index, offset - 1);\n};\nvar to_hex_string = function (string) {\n  var hexString = '';\n  for (var index = 0; index < string.length; index++) {\n    var value = BinaryParser.toByte(string.substr(index, 1));\n    var number = value <= 15 ? \"0\" + value.toString(16) : value.toString(16);\n    hexString = hexString + number;\n  }\n  return hexString;\n};\n\n// Create Tree Object from Raw stream\nGitTree.from_raw = function (raw_object, repository) {\n  var entries = [];\n  var index = 0;\n  var content_length = raw_object.content.length;\n  var content = raw_object.content;\n\n  // Parse the content\n  while (index < content_length) {\n    var mode = read_until_chr(index, content, ' ');\n    index = index + mode.length + 1;\n    var file_name = read_until_chr(index, content, '\\0');\n    index = index + file_name.length + 1;\n    var raw_sha = content.substr(index, 20);\n    index = index + raw_sha.length;\n    var sha = to_hex_string(raw_sha);\n\n    // Add the Entry to the directory list\n    entries.push(new DirectoryEntry(mode, file_name, sha));\n  }\n\n  // Return a tree with all the entries\n  return new GitTree(entries, repository);\n};","map":{"version":3,"names":["util","require","BinaryParser","DirectoryEntry","GitTree","exports","entries","repository","_entries","_repository","Object","defineProperty","get","set","value","enumerable","map","e","format_mode","format_type","sha1","join","name","read_until_chr","index","content","char","found","content_length","length","chr_code","charCodeAt","offset","substr","to_hex_string","string","hexString","toByte","number","toString","from_raw","raw_object","mode","file_name","raw_sha","sha","push"],"sources":["/Users/bobbyrein/react-course/golden-brown/node_modules/git/lib/git/internal/git_tree.js"],"sourcesContent":["var util = require('util'),\n  BinaryParser = require('../binary_parser').BinaryParser,\n  DirectoryEntry = require('../internal/directory_entry').DirectoryEntry;\n\nvar GitTree = exports.GitTree = function(entries, repository) {  \n  var _entries = entries ? entries : [], _repository = repository;\n  \n  // Internal properties\n  Object.defineProperty(this, \"entries\", { get: function() { return _entries; }, set: function(value) { _entries = value; }, enumerable: true});\n  Object.defineProperty(this, \"repository\", { get: function() { return _repository; }, set: function(value) { _repository = value; }, enumerable: true});\n  Object.defineProperty(this, \"type\", { get: function() { return \"tree\"; }, enumerable: true});      \n\n  // Raw content of commit\n  Object.defineProperty(this, \"raw_content\", { get: function() {\n    return _entries.map(function(e) {\n      return [[e.format_mode, e.format_type, e.sha1].join(' '), e.name].join('\\t')\n    }).join('\\n');    \n  }, enumerable: true});        \n}\n\nvar read_until_chr = function(index, content, char) {\n  var found = false;\n  var content_length = content.length;\n  var chr_code = char.charCodeAt(0);\n  var offset = 0;\n  \n  // Search until we locate the content\n  while(!found && (index + offset) < content_length) {\n    if(content.charCodeAt(index + offset) == chr_code) found = true;\n    offset = offset + 1;\n  }  \n    \n  // Extract content and return\n  return content.substr(index, offset - 1);\n}\n\nvar to_hex_string = function(string) {\n  var hexString = '';\n  for(var index = 0; index < string.length; index++) {\n    var value = BinaryParser.toByte(string.substr(index, 1));\n    var number = value <= 15 ? \"0\" + value.toString(16) : value.toString(16);\n    hexString = hexString + number;\n  }\n  return hexString;\n};\n\n// Create Tree Object from Raw stream\nGitTree.from_raw = function(raw_object, repository) {\n  var entries = [];\n  var index = 0;\n  var content_length = raw_object.content.length;\n  var content = raw_object.content;\n  \n  // Parse the content\n  while(index < content_length) {\n    var mode = read_until_chr(index, content, ' ');\n    index = index + mode.length + 1;\n    var file_name = read_until_chr(index, content, '\\0');\n    index = index + file_name.length + 1;\n    var raw_sha = content.substr(index, 20);\n    index = index + raw_sha.length;\n    var sha = to_hex_string(raw_sha);\n    \n    // Add the Entry to the directory list\n    entries.push(new DirectoryEntry(mode, file_name, sha));\n  }\n  \n  // Return a tree with all the entries\n  return new GitTree(entries, repository);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}