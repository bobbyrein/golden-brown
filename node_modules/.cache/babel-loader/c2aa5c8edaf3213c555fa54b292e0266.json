{"ast":null,"code":"var _jsxFileName = \"/Users/bobbyrein/react-course/golden-brown/src/contexts/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst addCartItem = (cartItems, productToAdd) => {\n  // find if cartItems contains productToAdd\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  // If found, increment quantity\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  // return new array with modified cartItems / new cart item\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n  // check if quantity is equal to 1, if it is, remove that item from the cart\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n  // return back cartItems with matching cart item with reduced quantity\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity - 1\n    } : cartItem);\n  }\n};\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemToCart: () => {},\n  cartCount: 0\n});\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartCount, setCartCount] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemToCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    addItemToCart,\n    cartItems,\n    cartCount,\n    removeItemToCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"1STVRVZJMMTq6OZavO9o7qwZdno=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","CartContext","isCartOpen","setIsCartOpen","addItemToCart","removeItemToCart","cartCount","CartProvider","children","setCartItems","setCartCount","newCartCount","reduce","total","value"],"sources":["/Users/bobbyrein/react-course/golden-brown/src/contexts/cart.context.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\n\nconst addCartItem = (cartItems, productToAdd) => {\n    // find if cartItems contains productToAdd\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id === productToAdd.id\n    );\n    // If found, increment quantity\n    if (existingCartItem) {\n        return cartItems.map((cartItem) =>\n            cartItem.id === productToAdd.id\n                ? { ...cartItem, quantity: cartItem.quantity + 1 }\n                : cartItem\n        )\n    }\n    // return new array with modified cartItems / new cart item\n    return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n    // find the cart item to remove\n    const existingCartItem = cartItems.find(\n        (cartItem) => cartItem.id === cartItemToRemove.id\n    );\n    // check if quantity is equal to 1, if it is, remove that item from the cart\n    if (existingCartItem.quantity === 1) {\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n    }\n    // return back cartItems with matching cart item with reduced quantity\n    if (existingCartItem) {\n        return cartItems.map((cartItem) =>\n            cartItem.id === cartItemToRemove.id\n                ? { ...cartItem, quantity: cartItem.quantity - 1 }\n                : cartItem\n        )\n    }\n}\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => { },\n    cartItems: [],\n    addItemToCart: () => { },\n    removeItemToCart: () => { },\n    cartCount: 0\n});\n\nexport const CartProvider = ({ children }) => {\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [cartItems, setCartItems] = useState([]);\n    const [cartCount, setCartCount] = useState(0);\n\n    useEffect(() => {\n        const newCartCount = cartItems.reduce(\n            (total, cartItem) => total + cartItem.quantity,\n            0\n        );\n        setCartCount(newCartCount);\n    }, [cartItems]);\n\n    const addItemToCart = (productToAdd) => {\n        setCartItems(addCartItem(cartItems, productToAdd));\n    }\n\n    const removeItemToCart = (cartItemToRemove) => {\n        setCartItems(removeCartItem(cartItems, cartItemToRemove));\n    }\n\n    const value = { isCartOpen, setIsCartOpen, addItemToCart, cartItems, cartCount, removeItemToCart };\n\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module"}