{"ast":null,"code":"var util = require('util'),\n  fs = require('fs'),\n  Buffer = require('buffer').Buffer;\nvar FileWindow = exports.FileWindow = function (idxfile, version) {\n  var _idxfile = idxfile,\n    _version = version,\n    _global_offset,\n    _offset = null,\n    _seek_offset = 0;\n  // Set file global offset\n  _global_offset = _version == 2 ? 8 : 0;\n  //Internal properties\n  Object.defineProperty(this, \"idxfile\", {\n    get: function () {\n      return _idxfile;\n    },\n    set: function (value) {\n      _idxfile = value;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"version\", {\n    get: function () {\n      return _version;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"global_offset\", {\n    get: function () {\n      return _global_offset;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"offset\", {\n    get: function () {\n      return _offset;\n    },\n    set: function (value) {\n      _offset = value;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"seek_offset\", {\n    get: function () {\n      return _seek_offset;\n    },\n    set: function (value) {\n      _seek_offset = value;\n    },\n    enumerable: true\n  });\n};\nFileWindow.prototype.unmap = function () {\n  this.idxfile = null;\n};\nFileWindow.prototype.index = function (idx) {\n  var offset = null,\n    len = null,\n    seek_offset = null;\n  // open the file\n  var idx_handle = fs.openSync(this.idxfile, \"r\");\n  if (idx.length == 1) idx = idx[0];\n  // Number support\n  if (idx.constructor == Number && idx === parseInt(value, 10)) {\n    offset = idx;\n    len = null;\n  } else if (Array.isArray(idx)) {\n    offset = idx[0];\n    len = idx[1];\n  } else {\n    throw \"invalid index param: \" + util.inspect(idx);\n  }\n\n  // Seek position equivalent using a position in the read\n  if (this.offset != offset) {\n    this.seek_offset = offset + this.global_offset;\n  }\n\n  // Adjust the stored offset\n  this.offset = offset + len ? len : 1;\n  if (!len) len = 1;\n\n  // Read the offset value\n  var buffer = new Buffer(len);\n  if (len) {\n    fs.readSync(idx_handle, buffer, 0, len, this.seek_offset);\n  } else {\n    fs.readSync(idx_handle, buffer, 0, 1, this.seek_offset);\n  }\n  // Update seek_offset\n  this.seek_offset = this.seek_offset + len;\n\n  // Close the file don't keep file handles around\n  fs.closeSync(idx_handle);\n  return buffer;\n};\nFileWindow.prototype.close = function () {\n  // fs.closeSync(this.idxfile);\n  this.unmap();\n};","map":{"version":3,"names":["util","require","fs","Buffer","FileWindow","exports","idxfile","version","_idxfile","_version","_global_offset","_offset","_seek_offset","Object","defineProperty","get","set","value","enumerable","prototype","unmap","index","idx","offset","len","seek_offset","idx_handle","openSync","length","constructor","Number","parseInt","Array","isArray","inspect","global_offset","buffer","readSync","closeSync","close"],"sources":["/Users/bobbyrein/react-course/golden-brown/node_modules/git/lib/git/file_window.js"],"sourcesContent":["var util = require('util'),\n  fs = require('fs'),\n  Buffer = require('buffer').Buffer;\n\nvar FileWindow = exports.FileWindow = function(idxfile, version) {\n  var _idxfile = idxfile, _version = version, _global_offset, _offset = null, _seek_offset = 0;\n  // Set file global offset\n  _global_offset = _version == 2 ? 8 : 0;\n  //Internal properties\n  Object.defineProperty(this, \"idxfile\", { get: function() { return _idxfile; }, set: function(value) { _idxfile = value; }, enumerable: true});\n  Object.defineProperty(this, \"version\", { get: function() { return _version; }, enumerable: true});\n  Object.defineProperty(this, \"global_offset\", { get: function() { return _global_offset; }, enumerable: true});\n  Object.defineProperty(this, \"offset\", { get: function() { return _offset; }, set: function(value) { _offset = value; }, enumerable: true});\n  Object.defineProperty(this, \"seek_offset\", { get: function() { return _seek_offset; }, set: function(value) { _seek_offset = value; }, enumerable: true});\n}\n\nFileWindow.prototype.unmap = function() {\n  this.idxfile = null;\n}\n\nFileWindow.prototype.index = function(idx) {\n  var offset = null, len = null, seek_offset = null;\n  // open the file\n  var idx_handle = fs.openSync(this.idxfile, \"r\");\n  \n  if(idx.length == 1) idx = idx[0];\n  // Number support\n  if(idx.constructor == Number && idx === parseInt(value, 10)) {\n    offset = idx;\n    len = null;\n  } else if(Array.isArray(idx)) {\n    offset = idx[0];\n    len = idx[1]\n  } else {\n    throw \"invalid index param: \" + util.inspect(idx);\n  }\n  \n  // Seek position equivalent using a position in the read\n  if(this.offset != offset) {\n    this.seek_offset = offset + this.global_offset;\n  }\n  \n  // Adjust the stored offset\n  this.offset = (offset + len) ? len : 1;  \n  if(!len) len = 1;    \n\n  // Read the offset value\n  var buffer = new Buffer(len);\n    \n  if(len) {\n    fs.readSync(idx_handle, buffer, 0, len, this.seek_offset);\n  } else {\n    fs.readSync(idx_handle, buffer, 0, 1, this.seek_offset);    \n  }\n  // Update seek_offset\n  this.seek_offset = this.seek_offset + len;\n  \n  // Close the file don't keep file handles around\n  fs.closeSync(idx_handle);\n  return buffer;\n} \n\nFileWindow.prototype.close = function() {\n  // fs.closeSync(this.idxfile);\n  this.unmap();\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}