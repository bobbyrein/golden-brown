{"ast":null,"code":"var util = require('util');\nvar GitBlob = exports.GitBlob = function (content, repository) {\n  var _content = content,\n    _repository = repository;\n  Object.defineProperty(this, \"content\", {\n    get: function () {\n      return _content;\n    },\n    set: function (value) {\n      _content = value;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"repository\", {\n    get: function () {\n      return _repository;\n    },\n    set: function (value) {\n      _repository = value;\n    },\n    enumerable: false\n  });\n  Object.defineProperty(this, \"type\", {\n    get: function () {\n      return \"blob\";\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"raw_content\", {\n    get: function () {\n      return _content;\n    },\n    set: function (value) {\n      _content = value;\n    },\n    enumerable: true\n  });\n};\nGitBlob.from_raw = function (raw_object, repository) {\n  return new GitBlob(raw_object.content);\n};","map":{"version":3,"names":["util","require","GitBlob","exports","content","repository","_content","_repository","Object","defineProperty","get","set","value","enumerable","from_raw","raw_object"],"sources":["/Users/bobbyrein/react-course/golden-brown/node_modules/git/lib/git/internal/git_blob.js"],"sourcesContent":["var util = require('util');\n\nvar GitBlob = exports.GitBlob = function(content, repository) {\n  var _content = content, _repository = repository;\n\n  Object.defineProperty(this, \"content\", { get: function() { return _content; }, set: function(value) { _content = value; }, enumerable: true});\n  Object.defineProperty(this, \"repository\", { get: function() { return _repository; }, set: function(value) { _repository = value; }, enumerable: false});\n  Object.defineProperty(this, \"type\", { get: function() { return \"blob\"; }, enumerable: true});      \n  Object.defineProperty(this, \"raw_content\", { get: function() { return _content; }, set: function(value) { _content = value; }, enumerable: true});\n}\n\nGitBlob.from_raw = function(raw_object, repository) {\n  return new GitBlob(raw_object.content);\n}"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,IAAIC,OAAO,GAAGC,OAAO,CAACD,OAAO,GAAG,UAASE,OAAO,EAAEC,UAAU,EAAE;EAC5D,IAAIC,QAAQ,GAAGF,OAAO;IAAEG,WAAW,GAAGF,UAAU;EAEhDG,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAOJ,QAAQ;IAAE,CAAC;IAAEK,GAAG,EAAE,UAASC,KAAK,EAAE;MAAEN,QAAQ,GAAGM,KAAK;IAAE,CAAC;IAAEC,UAAU,EAAE;EAAI,CAAC,CAAC;EAC7IL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,YAAY,EAAE;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAOH,WAAW;IAAE,CAAC;IAAEI,GAAG,EAAE,UAASC,KAAK,EAAE;MAAEL,WAAW,GAAGK,KAAK;IAAE,CAAC;IAAEC,UAAU,EAAE;EAAK,CAAC,CAAC;EACvJL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAO,MAAM;IAAE,CAAC;IAAEG,UAAU,EAAE;EAAI,CAAC,CAAC;EAC5FL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;IAAEC,GAAG,EAAE,YAAW;MAAE,OAAOJ,QAAQ;IAAE,CAAC;IAAEK,GAAG,EAAE,UAASC,KAAK,EAAE;MAAEN,QAAQ,GAAGM,KAAK;IAAE,CAAC;IAAEC,UAAU,EAAE;EAAI,CAAC,CAAC;AACnJ,CAAC;AAEDX,OAAO,CAACY,QAAQ,GAAG,UAASC,UAAU,EAAEV,UAAU,EAAE;EAClD,OAAO,IAAIH,OAAO,CAACa,UAAU,CAACX,OAAO,CAAC;AACxC,CAAC"},"metadata":{},"sourceType":"script"}