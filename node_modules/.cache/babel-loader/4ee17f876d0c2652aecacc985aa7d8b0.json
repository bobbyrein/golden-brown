{"ast":null,"code":"var _jsxFileName = \"/Users/bobbyrein/react-course/golden-brown/src/components/button/button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from \"./button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: \"google-sign-in\",\n  inverted: \"inverted\"\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButon = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `button-container ${BUTTON_TYPE_CLASSES[buttonType]}`,\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","otherProps","CustomButon"],"sources":["/Users/bobbyrein/react-course/golden-brown/src/components/button/button.component.jsx"],"sourcesContent":["import { BaseButton, GoogleSignInButton, InvertedButton } from \"./button.styles\";\n\nexport const BUTTON_TYPE_CLASSES = {\n    base: 'base',\n    google: \"google-sign-in\",\n    inverted: \"inverted\"\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>\n({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n}[buttonType]);\n\nconst Button = ({ children, buttonType, ...otherProps }) => {\n    const CustomButon = getButton(buttonType);\n\n    return (\n        <button\n            className={`button-container ${BUTTON_TYPE_CLASSES[buttonType]}`}\n            {...otherProps}\n        >\n            {children}\n        </button>\n    );\n};\n\nexport default Button;"],"mappings":";AAAA,SAASA,UAAU,EAAEC,kBAAkB,EAAEC,cAAc,QAAQ,iBAAiB;AAAC;AAEjF,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAU,uEAAGL,mBAAmB,CAACC,IAAI;EAAA,OACvD;IACG,CAACD,mBAAmB,CAACC,IAAI,GAAGJ,UAAU;IACtC,CAACG,mBAAmB,CAACE,MAAM,GAAGJ,kBAAkB;IAChD,CAACE,mBAAmB,CAACG,QAAQ,GAAGJ;EACpC,CAAC,CAACM,UAAU,CAAC;AAAA,CAAC;AAEd,MAAMC,MAAM,GAAG,QAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEF,UAAU;IAAE,GAAGG;EAAW,CAAC;EACnD,MAAMC,WAAW,GAAGL,SAAS,CAACC,UAAU,CAAC;EAEzC,oBACI;IACI,SAAS,EAAG,oBAAmBL,mBAAmB,CAACK,UAAU,CAAE,EAAE;IAAA,GAC7DG,UAAU;IAAA,UAEbD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEjB,CAAC;AAAC,KAXID,MAAM;AAaZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}