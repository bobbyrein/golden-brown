{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBTRjZqtESaTlbLkB-2xRjmnx7DJE75Qeo\",\n  authDomain: \"crown-clothing-db-edfaf.firebaseapp.com\",\n  projectId: \"crown-clothing-db-edfaf\",\n  storageBucket: \"crown-clothing-db-edfaf.appspot.com\",\n  messagingSenderId: \"536120961604\",\n  appId: \"1:536120961604:web:336d89c430dc62193baa11\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  // if user data does not exist\n  if (!userSnapshot.exists()) {\n    // create / set the document with the data from userAut in my collection\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error createing the user', error.message);\n    }\n  }\n  // if user data exists, return userDocRef\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    return;\n  }\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) {\n    return;\n  }\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/bobbyrein/react-course/golden-brown/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n    getAuth,\n    signInWithRedirect,\n    signInWithPopup,\n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged\n} from 'firebase/auth';\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc,\n    collection,\n    writeBatch,\n    query,\n    getDocs\n} from 'firebase/firestore'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBTRjZqtESaTlbLkB-2xRjmnx7DJE75Qeo\",\n    authDomain: \"crown-clothing-db-edfaf.firebaseapp.com\",\n    projectId: \"crown-clothing-db-edfaf\",\n    storageBucket: \"crown-clothing-db-edfaf.appspot.com\",\n    messagingSenderId: \"536120961604\",\n    appId: \"1:536120961604:web:336d89c430dc62193baa11\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst googleProvider = new GoogleAuthProvider();\n\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\"\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () =>\n    signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () =>\n    signInWithRedirect(auth, googleProvider);\n\nexport const db = getFirestore()\n\nexport const addCollectionAndDocuments = async (\n    collectionKey,\n    objectsToAdd\n) => {\n    const collectionRef = collection(db, collectionKey);\n    const batch = writeBatch(db);\n\n    objectsToAdd.forEach((object) => {\n        const docRef = doc(collectionRef, object.title.toLowerCase());\n        batch.set(docRef, object);\n    });\n\n    await batch.commit();\n    console.log('done');\n};\n\nexport const getCategoriesAndDocuments = async () => {\n    const collectionRef = collection(db, 'categories');\n    const q = query(collectionRef);\n\n    const querySnapshot = await getDocs(q);\n    const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n        const { title, items } = docSnapshot.data();\n        acc[title.toLowerCase()] = items;\n        return acc;\n    }, {})\n\n    return categoryMap;\n}\n\nexport const createUserDocumentFromAuth = async (\n    userAuth,\n    additionalInformation = {}\n) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    const userSnapshot = await getDoc(userDocRef);\n\n    // if user data does not exist\n    if (!userSnapshot.exists()) {\n        // create / set the document with the data from userAut in my collection\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInformation,\n            });\n        }\n        catch (error) {\n            console.log('error createing the user', error.message);\n        }\n    }\n    // if user data exists, return userDocRef\n    return userDocRef;\n}\n\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) {\n        return;\n    }\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n}\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if (!email || !password) {\n        return;\n    }\n\n    return await signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = async () => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) =>\n    onAuthStateChanged(auth, callback);"],"mappings":"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"},"metadata":{},"sourceType":"module"}